{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["funcStyle","funcId","FuncComp","props","useState","initNumber","number","setNumber","Date","toString","_date","setDate","useEffect","console","log","className","type","value","onClick","Math","random","classStyle","classId","ClassComp","state","date","newProps","newState","this","setState","bind","Component","App","funcShow","setFuncShow","classShow","setClassShow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2RAsBA,IAAIA,EAAY,eACZC,EAAS,EACb,SAASC,EAASC,GAChB,IAAI,EAAsBC,mBAASD,EAAME,YAAzC,mBAAKC,EAAL,KAAaC,EAAb,KACI,EAAmBH,oBAAU,IAAII,MAAQC,YAA7C,mBAAKC,EAAL,KAAYC,EAAZ,KAsBA,OApBAC,qBAAU,WAER,OADAC,QAAQC,IAAI,2BAA6Bb,EAASD,GAC3C,WACLa,QAAQC,IAAI,wBAA0Bb,EAASD,OAGnDY,qBAAU,WAER,OADAC,QAAQC,IAAI,kDAAoDb,EAASD,GAClE,WACLa,QAAQC,IAAI,kDAAoDb,EAASD,MAE1E,IACHY,qBAAU,WAER,OADAC,QAAQC,IAAI,2CAA6Cb,EAASD,GAC3D,WACLa,QAAQC,IAAI,wCAA0Cb,EAASD,MAEhE,CAACM,EAAQI,IAEZG,QAAQC,IAAI,gCAAkCb,EAASD,GAErD,sBAAKe,UAAU,qBAAf,UACE,0DACA,0CAAaT,KACb,wCAAWI,KACX,uBAAOM,KAAK,SAASC,MAAM,SAASC,QAAS,WAC3CX,EAAUY,KAAKC,aAEjB,uBAAOJ,KAAK,SAASC,MAAM,OAAOC,QAAS,WACzCP,GAAS,IAAIH,MAAQC,kBAM7B,IAAIY,EAAa,YACbC,EAAU,EACRC,E,4MACJC,MAAQ,CACNlB,OAAQ,EAAKH,MAAME,WACnBoB,MAAO,IAAIjB,MAAQC,Y,uDAMrB,WACEI,QAAQC,IAAI,mCAAqCQ,EAAUD,K,mCAE7D,SAAsBK,EAAUC,GAE9B,OADAd,QAAQC,IAAI,uCAAyCQ,EAAUD,IACxD,I,gCAKT,SAAmBK,EAAUC,GAC3Bd,QAAQC,IAAI,oCAAsCQ,EAAUD,K,kCAE9D,WACER,QAAQC,IAAI,sCAAwCQ,EAAUD,K,oBAGhE,WAEE,OADAR,QAAQC,IAAI,wBAA0BQ,EAAUD,GAE9C,sBAAKN,UAAU,kBAAf,UACE,uDACA,0CAAaa,KAAKJ,MAAMlB,UACxB,wCAAWsB,KAAKJ,MAAMC,QACtB,uBAAOT,KAAK,SAASC,MAAM,SAASC,QAAS,WAC3CU,KAAKC,SAAS,CAAEvB,OAAQa,KAAKC,YAC7BU,KAAKF,QACP,uBAAOZ,KAAK,SAASC,MAAM,OAAOC,QAAS,WACzCU,KAAKC,SAAS,CAAEJ,MAAO,IAAIjB,MAAQC,cACnCqB,KAAKF,e,GAtCSG,aA4CTC,EA1Gf,WACE,MAAgC5B,oBAAS,GAAzC,mBAAO6B,EAAP,KAAiBC,EAAjB,KACA,EAAkC9B,oBAAS,GAA3C,mBAAO+B,EAAP,KAAkBC,EAAlB,KAEA,OACE,sBAAKrB,UAAU,kBAAf,UACE,gDACA,uBAAOC,KAAK,SAASC,MAAM,kBAAkBC,QAAS,WACpDgB,GAAaD,MAEf,uBAAOjB,KAAK,SAASC,MAAM,mBAAmBC,QAAS,WACrDkB,GAAcD,MAEfF,EAAW,cAAC/B,EAAD,CAAUG,WAAY,IAAQ,KACzC8B,EAAY,cAAC,EAAD,CAAW9B,WAAY,IAAQ,SCLnCgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.bbb79b80.chunk.js","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [funcShow, setFuncShow] = useState(true);\n  const [classShow, setClassShow] = useState(true);\n\n  return (\n    <div className=\"hello_container\">\n      <h1>Hello, World !</h1>\n      <input type=\"button\" value=\"FuncComp Toggle\" onClick={function () {\n        setFuncShow(!funcShow);\n      }} />\n      <input type=\"button\" value=\"ClassComp Toggle\" onClick={function () {\n        setClassShow(!classShow);\n      }} />\n      {funcShow ? <FuncComp initNumber={2} /> : null}\n      {classShow ? <ClassComp initNumber={2} /> : null}\n    </div>\n  );\n}\n\nvar funcStyle = 'color:yellow';\nvar funcId = 0;\nfunction FuncComp(props) {\n  var [number, setNumber] = useState(props.initNumber);\n  var [_date, setDate] = useState((new Date()).toString());\n\n  useEffect(function () {\n    console.log(\"%cfunc => SideEffect \" + (++funcId), funcStyle);\n    return function () {\n      console.log(\"%cfunc => CleanUp \" + (++funcId), funcStyle);\n    }\n  });\n  useEffect(function () {\n    console.log(\"%cfunc => SideEffect [] (componentDidMount) \" + (++funcId), funcStyle);\n    return function () {\n      console.log(\"%cfunc => CleanUp [] (componentWillUnmount) \" + (++funcId), funcStyle);\n    }\n  }, []);\n  useEffect(function () {\n    console.log(\"%cfunc => SideEffect [number, _date] \" + (++funcId), funcStyle);\n    return function () {\n      console.log(\"%cfunc => CleanUp [number, _date] \" + (++funcId), funcStyle);\n    }\n  }, [number, _date]);\n\n  console.log(\"%cfunc => return (render) \" + (++funcId), funcStyle);\n  return (\n    <div className=\"function_container\">\n      <h2>function style component</h2>\n      <p>Number : {number}</p>\n      <p>Date : {_date}</p>\n      <input type=\"button\" value=\"random\" onClick={function () {\n        setNumber(Math.random());\n      }} />\n      <input type=\"button\" value=\"date\" onClick={function () {\n        setDate((new Date()).toString());\n      }} />\n    </div>\n  );\n}\n\nvar classStyle = 'color:red';\nvar classId = 0;\nclass ClassComp extends Component {\n  state = {\n    number: this.props.initNumber,\n    date: (new Date()).toString()\n  }\n\n  // componentWillMount() { // 사용이 금지됨\n  //   console.log(\"%cclass => componentWillMount \"+(++classId), classStyle);\n  // }\n  componentDidMount() {\n    console.log(\"%cclass => componentDidMount \" + (++classId), classStyle);\n  }\n  shouldComponentUpdate(newProps, newState) {\n    console.log(\"%cclass => shouldComponentUpdate \" + (++classId), classStyle);\n    return true;\n  }\n  // componentWillUpdate(newProps, newState) { // 사용이 금지됨\n  //   console.log(\"%cclass => componentWillUpdate\", classStyle);\n  // }\n  componentDidUpdate(newProps, newState) {\n    console.log(\"%cclass => componentDidUpdate \" + (++classId), classStyle);\n  }\n  componentWillUnmount() {\n    console.log(\"%cclass => componentWillUnmount \" + (++classId), classStyle);\n  }\n\n  render() {\n    console.log(\"%cclass => render \" + (++classId), classStyle);\n    return (\n      <div className=\"class_container\">\n        <h2>class style component</h2>\n        <p>Number : {this.state.number}</p>\n        <p>Date : {this.state.date}</p>\n        <input type=\"button\" value=\"random\" onClick={function () {\n          this.setState({ number: Math.random() })\n        }.bind(this)} />\n        <input type=\"button\" value=\"date\" onClick={function () {\n          this.setState({ date: (new Date()).toString() })\n        }.bind(this)} />\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}